---
- name: Configure Docker Swarm host and deploy Yii2 app
  hosts: swarm
  become: yes

  vars:
    docker_compose_version: "v2.20.2"
    repo_url: "https://github.com/syedabuthahir2024/yii2-swarm-demo.git"
    domain_name: "52.66.239.177"
    python_venv_path: /opt/venv
    app_path: /opt/yii2-app

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - git
          - nginx
          - python3-pip
          - python3-venv
        state: present

    - name: Create Python virtual environment
      command: python3 -m venv {{ python_venv_path }}
      args:
        creates: "{{ python_venv_path }}/bin/activate"

    - name: Install required python packages globally
      pip:
        name:
          - jsondiff
          - requests
        executable: pip3

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Install Docker engine and CLI
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Check if Docker Swarm is already initialized
      command: docker info --format '{{ "{{ .Swarm.LocalNodeState }}" }}'
      register: swarm_status
      changed_when: false
      failed_when: false

    - name: Initialize Docker Swarm if not already active
      command: docker swarm init --advertise-addr {{ ansible_default_ipv4.address }}
      when: swarm_status.stdout != "active"

    - name: Create directory for app
      file:
        path: "{{ app_path }}"
        state: directory
        mode: '0755'

    - name: Clone your application repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_path }}"
        update: yes

    - name: Deploy Yii2 app using docker stack
      shell: docker stack deploy -c {{ app_path }}/docker-compose.yml yii2
      register: stack_result
      retries: 3
      delay: 5
      until: stack_result.rc == 0

    - name: Print deployment stdout
      debug:
        var: stack_result.stdout_lines

    - name: Print deployment stderr
      debug:
        var: stack_result.stderr_lines

    - name: Configure NGINX site
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/yii2-app
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx

    - name: Enable NGINX site
      file:
        src: /etc/nginx/sites-available/yii2-app
        dest: /etc/nginx/sites-enabled/yii2-app
        state: link

    - name: Remove default NGINX site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
